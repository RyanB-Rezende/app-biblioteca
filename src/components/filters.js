// components/filters.js

/**
 * Filtra livros com base em m√∫ltiplos crit√©rios.
 *
 * @param {Array} livros - Lista de livros completa.
 * @param {Object} filtros - Objeto de filtros ativos.
 * @returns {Array} - Lista filtrada.
 */
export const filterBooks = (livros, filtros) => {
  return livros.filter((livro) => {
    // üîç Busca geral no t√≠tulo, autor, descri√ß√£o
    if (filtros.query) {
      const q = filtros.query.toLowerCase();
      const matchesQuery =
        livro.titulo?.toLowerCase().includes(q) ||
        livro.autor?.toLowerCase().includes(q) ||
        livro.descricao?.toLowerCase().includes(q);
      if (!matchesQuery) return false;
    }

    // ‚úÖ Status espec√≠fico (PENDENTE, LENDO, CONCLUIDO)
    if (filtros.status && filtros.status !== "TODOS") {
      if (livro.status !== filtros.status) return false;
    }

    // ‚≠ê Avalia√ß√£o m√≠nima
    if (filtros.minRating) {
      if (parseFloat(livro.avaliacao) < filtros.minRating) return false;
    }

    // üìÖ Ano de publica√ß√£o
    if (filtros.anoPublicacao) {
      const ano = new Date(livro.data_publicacao).getFullYear();
      if (ano !== parseInt(filtros.anoPublicacao)) return false;
    }

    // ‚úÖ Passou em todos os filtros
    return true;
  });
};
